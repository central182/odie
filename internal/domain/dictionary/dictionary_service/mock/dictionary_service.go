// Code generated by MockGen. DO NOT EDIT.
// Source: dictionary_service.go

// Package dictionary_service_mock is a generated GoMock package.
package dictionary_service_mock

import (
	reflect "reflect"

	dictionary_service "github.com/central182/odie/internal/domain/dictionary/dictionary_service"
	entry "github.com/central182/odie/internal/domain/dictionary/entry"
	headword "github.com/central182/odie/internal/domain/dictionary/headword"
	gomock "github.com/golang/mock/gomock"
)

// MockDictionaryService is a mock of DictionaryService interface.
type MockDictionaryService struct {
	ctrl     *gomock.Controller
	recorder *MockDictionaryServiceMockRecorder
}

// MockDictionaryServiceMockRecorder is the mock recorder for MockDictionaryService.
type MockDictionaryServiceMockRecorder struct {
	mock *MockDictionaryService
}

// NewMockDictionaryService creates a new mock instance.
func NewMockDictionaryService(ctrl *gomock.Controller) *MockDictionaryService {
	mock := &MockDictionaryService{ctrl: ctrl}
	mock.recorder = &MockDictionaryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDictionaryService) EXPECT() *MockDictionaryServiceMockRecorder {
	return m.recorder
}

// GetEntries mocks base method.
func (m *MockDictionaryService) GetEntries(arg0 headword.Headword) ([]entry.Entry, dictionary_service.GetEntriesError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntries", arg0)
	ret0, _ := ret[0].([]entry.Entry)
	ret1, _ := ret[1].(dictionary_service.GetEntriesError)
	return ret0, ret1
}

// GetEntries indicates an expected call of GetEntries.
func (mr *MockDictionaryServiceMockRecorder) GetEntries(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntries", reflect.TypeOf((*MockDictionaryService)(nil).GetEntries), arg0)
}
